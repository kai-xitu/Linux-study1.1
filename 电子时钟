#include<reg52.h>

#define uchar unsigned char
#define uint unsigned int

sbit sounder=P3^7;
sbit qingling=P1^5;
sbit tiaofen=P1^6;
sbit tiaoshi=P3^0;


sbit DS=P3^6; 
sbit LED1 = P3^4;
sbit LED2 = P3^5;
sbit LED3 = P1^2;
sbit LED4 = P1^4;
sbit anjian=P1^0; 
uint temp;            
uchar flag1;
uint a,b;
uchar hour,minu,sec, 
hour0,minu0,sec0,
hour1,minu1,sec1;
h1,h2,m1,m2,s1,s2, 
k,s; 
unsigned char code select[]={0x7f,0xbf,0xdf,0xef,0xf7,0xfb,0xfd,0xfe};
unsigned char code table[]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,
                        0x07,0x7f,0x6f,0x77,0x7c,0x39,0x5e,0x79,0x71};
unsigned char code table1[]={0xbf,0x86,0xdb,0xcf,0xe6,0xed,0xfd,
                        0x87,0xff,0xef};

void DDDD(void);
void keyscan();
void init();
void delay(uchar z);
void display(uchar,uchar,uchar);
void sounde();
void delay1(unsigned int count);											
void dsreset(void);
void tmpwritebyte(unsigned char dat);
void tmpchange(void);
void dis(unsigned int temp);



void main()
{ 
init();
while(1)
{    	

while(TR1)
{ 
	if(anjian==0)
{
delay(10);
if(anjian==0)
{
DDDD();
}
} 
keyscan();

while(s==1) 
{ 
keyscan(); 
display(hour1,minu1,sec1);
}
display(hour0,minu0,sec0);    
while(k)  
{
display(hour,minu,sec);     
}
}
}
}
void init()
{
a=0;
b=0;
k=0;
s=0;
hour0=0;
minu0=0;
sec0=0;
hour=0;
minu=0;
sec=0;
hour1=0;
minu1=0;
sec1=0;
TMOD=0x11;     
TH0=(65536-5000)/256;
TL0=(65536-5000)%256;
TH1=(65536-50000)/256;
TL1=(65536-50000)%256;
EA=1;
EX0=1;     
EX1=1;    
ET0=1;
ET1=1;
IT0=1;     
IT1=1;
PX0=1;
PX1=1;
TR0=0;      
TR1=1;      
}
void timer0_int() interrupt 1  
{
TH0=(65536-5000)/256;
TL0=(65536-5000)%256;
a++;
if(a==2)
{
a=0;
sec++;
if(sec==100)
{
sec=0;  
minu++;
if(minu==60)
{
minu=0;    
hour++;
if(hour==60)  
{
hour=0;
}
}
}
}
}
void ex0_int() interrupt 0
{    
k++;
if(k==3)
k=0;
if(k==1)
{
TR0=~TR0;
if(TR0==1)
{        
hour=0;
minu=0;
sec=0;    
}
}
if(k==2)
{
TR0=~TR0;
}    
}
void ex1_int() interrupt 2
{
s++;
if(s==3)
s=0;
}
void timer1_int() interrupt 3   
{
TH1=(65536-50000)/256;
TL1=(65536-50000)%256;
if(s==2)
{
if(hour1==hour0 && minu0==minu1)
	
         sounde();


}
b++;
if(b==40)
{
b=0;
sec0++;
if(sec0==60)
{  
sec0=0;
minu0++;
if(minu0==60)
{
minu0=0;
hour0++;
if(hour0==24)
hour0=0;
}
}
}
}

void keyscan()
{
if(s==1)
{
if(qingling==0)
{
	
delay(10);
if(qingling==0)
{
sec1=0;
minu1=0;
hour1=0;
}
} 	
if(tiaofen==0)
{
delay(10);
if(tiaofen==0)
{
minu1++;
if(minu1==60)
{
minu1=0;
}
while(!tiaofen);
}
}
if(tiaoshi==0)
{
hour1++;
if(hour1==24)
{
hour1=0;
}
while(!tiaoshi);
}
}
else   
{
if(qingling==0)
{
delay(10);
if(qingling==0)
{
sec0=0;
minu0=0;
hour0=0;
}
}
if(tiaofen==0)
{
delay(10);
if(tiaofen==0)
{
minu0++;
if(minu0==60)
{
minu0=0;
}
while(!tiaofen);
}
}
if(tiaoshi==0)
{
hour0++;
if(hour0==24)
{
hour0=0;
}
while(!tiaoshi);
}
}  
}
void display(uchar hour,uchar minu,uchar sec)
{
h1=hour/10;
h2=hour%10;
m1=minu/10;
m2=minu%10;
s1=sec/10;
s2=sec%10;
P2=0xff;
P0=table[h1];
P2=select[7];
delay(1);
P2=0xff;
P0=table[h2];
P2=select[6];
delay(1);
P2=0xff;
P0=0x40;;
P2=select[5];
delay(1);
P2=0xff;
P0=table[m1];
P2=select[4];
delay(1);
P2=0xff;
P0=table[m2];
P2=select[3];
delay(1);
P2=0xff;
P0=0x40;
P2=select[2];
delay(1);
P2=0xff;
P0=table[s1];
P2=select[1];
delay(1);
P2=0xff;
P0=table[s2];
P2=select[0];
delay(1);
}

//·äÃùÆ÷
void sounde()
{
		LED1=~LED1;
    sounder=~sounder;	
	  
}


void delay(uchar z)
{
int x,y;
for(x=z;x>0;x--)
for(y=110;y>0;y--);
}


void delay1(uint count)     
{
  uint i;
  while(count)
  {
    i=200;
    while(i>0)
    i--;
    count--;
  }
}
void dsreset(void)      
{
  uint i;
  DS=0;
  i=103;
  while(i>0)i--;
  DS=1;
  i=4;
  while(i>0)i--;
}

bit tmpreadbit(void)      
{
   uint i;
   bit dat;
   DS=0;i++;          
   DS=1;i++;i++;
   dat=DS;
   i=8;while(i>0)i--;
   return (dat);
}

uchar tmpread(void)  
{
  uchar i,j,dat;
  dat=0;
  for(i=1;i<=8;i++)
  {
    j=tmpreadbit();
    dat=(j<<7)|(dat>>1);   
  }
  return(dat);
}

void tmpwritebyte(uchar dat)   
{
  uint i;
  uchar j;
  bit testb;
  for(j=1;j<=8;j++)
  {
    testb=dat&0x01;
    dat=dat>>1;
    if(testb)    
    {
      DS=0;
      i++;i++;
      DS=1;
      i=8;while(i>0)i--;
    }
    else
    {
      DS=0;       
      i=8;while(i>0)i--;
      DS=1;
      i++;i++;
    }

  }
}

void tmpchange(void)  
{
  dsreset();
  delay1(1);
  tmpwritebyte(0xcc);  
  tmpwritebyte(0x44);  
}

uint tmp()             
{
  float tt;
  uchar a,b;
  dsreset();
  delay1(1);
  tmpwritebyte(0xcc);
  tmpwritebyte(0xbe);
  a=tmpread();
  b=tmpread();
  temp=b;
  temp<<=8;             
  temp=temp|a;
  tt=temp*0.0625;
  temp=tt*10+0.5;
  return temp;
}

void dis(uint temp)			//ÏÔÊ¾³ÌÐò
{
   uchar A1,A2,A2t,A3;
   A1=temp/100;
   A2t=temp%100;
   A2=A2t/10;
   A3=A2t%10;
	
		P2=0xff;
		P0=table[A1];
		P2=select[7];
		delay1(1);
			
		P2=0xff;
		P0=table1[A2];
		P2=select[6];
		delay1(1);
			
		P2=0xff;
		P0=table[A3];
		P2=select[5];
		delay1(1);
	 
}


void DDDD(void)
{
 uchar a;
  do
  {
    tmpchange();
	for(a=10;a>0;a--)
  	{   
  		dis(tmp());
  	}
		
		
	if(temp>=320)	£
		{
			LED1=0;
			sounder=0;
			delay1(100);
			sounder=1;
			LED1=1;
			if(temp>=380)
			{
				LED1=0;
				LED2=0;
			 sounder=0;
			  delay1(50);
			 sounder=1;
			  LED1=1;
			  LED2=1;
			}
		}

		
	if(temp<=270)	 
		{
			LED3=0;
			sounder=0;
			delay1(100);
			sounder=1;
			LED3=1;
			if(temp<=230)
			{
				  LED3=0;
				  LED4=0;
			  sounder=0;
			  delay1(50);
			  sounder=1;
			    LED3=1;
			    LED4=1;
			}
		}

}while(1);
}